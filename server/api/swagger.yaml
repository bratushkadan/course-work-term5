openapi: 3.0.0
info:
  title: Floral Store API
  description: API for Floral Store Aggregation
  version: 0.0.1

paths:
  /ping: &path_ping
    get:
      description: Get service health
      responses:
        200:
          "$ref": "#/components/responses/Ping"
  /health: *path_ping
  /v1/auth/token/user:
    get: &v1_auth_token_user_get
      description: Issue Auth Token
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/AuthToken"
        400:
          "$ref": "#/components/responses/Error"
    post: &v1_auth_token_user_post
      description: Verify Auth Token
      parameters:
        - "$ref": "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/AuthTokenValidation"
                  
        400:
          $ref: "#/components/responses/Error"
  /v1/auth/token/store:
    get: *v1_auth_token_user_get
    post: *v1_auth_token_user_post

  /v1/users:
      get:
        description: Get users
        responses:
          200:
            description: List of Users
            content:
              application/json:
                schema:
                  type: array
                  items:
                    "$ref": "#/components/schemas/User"
      post:
        description: Register user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/CreateUser"
        responses:
          201:
            $ref: "#/components/responses/CreateUser" 
  /v1/users/{id}:
      get:
        description: Get user
        parameters:
          - in: path
            name: id
            description: User's ID
            required: true
            schema:
              type: integer
              format: int32
        responses:
          200:
            description: User
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/User"
  /v1/cart:
    get:
      description: Get user's Cart
      parameters:
        - in: query
          name: id
          description: User's ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: User's cart
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cart"
  /v1/products:
    get:
      description: Get Products
      parameters:
        - in: query
          name: store_id
          description: ID of the Store
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Products
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  /v1/products/{id}:
    get:
      description: Get Products
      parameters:
        - in: path
          name: id
          description: ID of the Product
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Products
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"               
  # /v1/favorite:
  #   get:
  #     responses:
  #       200:
  #         description: Get favorite
  #         parameters:
  #           - in: query
  #             name: store_id
  #             description: ID of the Store
  #             required: false
  #             schema:
  #               type: integer
  #               format: int32
  # /v1/
  # /v1/
  # /v1/

components:
  responses:
    Ping:
      description: Healthcheck response
      x-go-name: PingResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - ts
            properties:
              ts:
                type: integer
                format: int64
    Message:
      description: Information Response
      x-go-name: MessageResponse
      content:
        application/json:
          schema:
            required:
              - message
            type: object
            properties:
              message:
                type: string
    Error:
      description: General Error
      x-go-name: ErrorResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
    AuthToken:
      description: Authentication Token
      x-go-name: AuthTokenResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
    AuthTokenValidation:
      description: AuthToken validation result
      x-go-name: AuthTokenValidationResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - valid
            properties:
              valid:
                type: boolean
    CreateUser:
      description: User created
      x-go-name: CreateUserResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
  parameters:
    AuthToken:
      in: header
      name: &X_AUTH_TOKEN X-Auth-Token
      description: Authentication/API Token
      required: true
      schema:
        type: string
  schemas:
    Store:
      type: object
      required:
        - id
        - name
        - password
        - email
        - phone_number
        - created
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        password:
          type: string
        email:
          type: string
        phone_number:
          type: string
        created:
          type: integer
          format: int32
    CreateUser:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
        - phone_number
      properties:
        first_name:
          type: string
          minLength: 2
          maxLength: 64
        last_name:
          type: string
          minLength: 2
          maxLength: 64
        email:
          type: string
          minLength: 5
          maxLength: 256
        password:
          type: string
          minLength: 6
          maxLength: 128
        phone_number:
          type: string
          minLength: 8
          maxLength: 24
    User:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - phone_number
      properties:
        id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
    ProductCategory:
      required:
        - id
        - name
        - description
        - created
        - modified
      type: object
      properties:
        id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
        created:
          type: number
          format: int32
    Product:
      required:
        - id
        - store_id
        - name
        - description
        - image_url
        - price
        - created
        - modified
        - category
      type: object
      properties:
        id:
          type: integer
          format: int32
        store_id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        price:
          type: integer
          format: int32
        created:
          type: integer
          format: int32
        modified:
          type: integer
          format: int32
        category:
          type: integer
          format: int32
        common_traits:
          type: object
          properties:
            min_height:
              type: integer
              format: int32
            max_height:
              type: integer
              format: int32
    Favorite:
      required:
        # - user_id
        - product_id
      type: object
      properties:
        user_id:
          type: integer
          format: int32
        product_id:
          type: integer
          format: int32
    CartPosition: &cart_position
      required:
        - order_id
        - product_id
        - quantity
      type: object
      properties:
        order_id:
          type: integer
          format: int32
        product_id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    Cart:
      type: array
      items:
        type: object
        properties:
          product:
            "$ref": "#/components/schemas/Product"
          quantity:
            type: integer
            format: int32
    OrderPosition: *cart_position
    Order:
      required:
        - id
        - status
        - user_id
        - created
        - status_modified
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          type: string
          description: Order status
          enum:
            - created
            - in_progress
            - processed
            - delivery
            - canceled
            - completed
        user_id:
          type: integer
          format: int32
        created:
          type: integer
          format: int32
        status_modified:
          type: integer
          format: int32
    ProductReview:
      required:
        - id
        - user_id
        - product_id
        - rating
        - review_text
        - created
        - modifed
      type: object
      properties:
        id:
          type: integer
          format: int32
        user_id:
          type: integer
          format: int32
        product_id:
          type: integer
          format: int32
        rating:
          minimum: 1
          maximum: 100
          type: number
          format: integer
        review_text:
          type: string
        created:
          type: integer
          format: int32